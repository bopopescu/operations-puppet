class kraken::proxy {
	# list of networks and IPs to allow
	# use of Analytics public proxy services
	# without HTTP auth password
	$whitelist = {
		"analyticsA"    => "10.64.21.0/24",
		"analyticsB"    => "10.64.36.0/24",
		"wmf_office"    => "216.38.130.0/24",
		"diederik"      => "70.28.63.126",
		"dsc"           => "71.198.62.242",
	}

	include kraken::proxy::haproxy
	include kraken::proxy::apache
}

# == Class kraken::proxy::haproxy
# Uses haproxy to set up a proxy to
# internally hosted web services.
#
# TODO: Should this be deprecated in favor of the Apache proxy?
# Since links are generated by internal servers and not rewritten,
# occasionally links will point directly at backend server names and ports.
# this breaks when using haproxy, since haproxy is doing name based
# proxying on port 80.
#
# Note: Do not include this class directly, instead include kraken::proxy.
class kraken::proxy::haproxy {
	require kraken::hadoop::config, kraken::storm

	$port              = 80
	$whitelist         = $kraken::proxy::whitelist

	$namenode_hostname = $kraken::hadoop::config::namenode_hostname
	$datanode_hostname = "analytics1011.eqiad.wmnet" # can pick any datanode here.
	$frontend_hostname = "analytics1027.eqiad.wmnet"
	$hue_hostname      = $frontend_hostname
	$oozie_hostname    = $frontend_hostname
	$storm_hostname    = $kraken::storm::nimbus_host
	$storm_port        = $kraken::storm::ui_port
	
	$graphite_hostname  = "analytics1008.eqiad.wmnet"
	$graphite_dash_port = "80"
	$riemann_hostname   = "analytics1008.eqiad.wmnet"
	$riemann_dash_port  = "8081"

	package { "haproxy": ensure => "installed" }

	file { "/etc/haproxy/haproxy.cfg":
		content => template("kraken/haproxy.cfg.erb"),
		require => Package["haproxy"],
	}

	service { "haproxy":
		ensure    => running,
		enable    => true,
		subscribe => File["/etc/haproxy/haproxy.cfg"],
	}
}


# == Class kraken::proxy::apache
# Installs Apache proxy configution to allow for
# access to internal Kraken web services.
#
# Note: Do not include this class directly, instead include kraken::proxy.
class kraken::proxy::apache {
	include webserver::apache
	webserver::apache::module { "rewrite": require => Class["webserver::apache"] }

	$proxy_port        = 8085
	$whitelist         = $kraken::proxy::whitelist
	$namenode_hostname = $kraken::hadoop::config::namenode_hostname
	$datanode_hostname = "analytics1011.eqiad.wmnet"  # can pick any datanode here.

	# apache htpasswd file for HTTP auth
	# from non whitelisted networks.
	file { "/srv/.htpasswd":
		content => template("kraken/apache-proxy.htpasswd"),
		owner   => 'root',
		group   => 'root',
		mode    => 0644,
	}

	# puppetized default vhost for port 81.
	# This also proxies requests to /wmf/public HDFS files
	# to a datanode.
	file { "/etc/apache2/sites-available/000-default":
		content => template("kraken/apache-default.vhost.erb"),
	}
	file { "/etc/apache2/sites-enabled/000-default":
		ensure  => "/etc/apache2/sites-available/000-default",
		notify  => Class[webserver::apache::service],
	}

	file { "/etc/apache2/sites-available/proxy.vhost":
		content => template("kraken/apache-proxy.vhost.erb"),
		require => File["/srv/.htpasswd"]
	}
	file { "/etc/apache2/sites-enabled/proxy.vhost":
		ensure  => "/etc/apache2/sites-available/proxy.vhost",
		notify  => Class[webserver::apache::service],
	}

}