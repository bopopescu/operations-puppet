# Note:  This file is managed by Puppet.

# udp2log filters for the /event data stream generated
# from varnish cache servers.
<%
# define product codes.
product_codes = [
  'web',
  'debug',
  'kraken',
  'limn',
  'mw',
  'i18n-uls',
  'wlm',
]

# quick and easy method for DRYing piping into kafka producer.
def kafka_producer(topic)
  "/usr/lib/kafka/bin/kafka-producer-shell.sh --props=/etc/kafka/producer.properties --topic=#{topic} > /dev/null"
end
-%>

# Produce events into Kafka.

# Filter for generic events (i.e. those without a predetermined product code)
# and produce into Kafka topic 'event-unknown'.
pipe 1 /bin/egrep -v '^/event(\.gif)?/(<%= product_codes.join('|') %>)\s' | <%= kafka_producer("event-unknown") %>
# NOTE: This perl regex also works, but uses negative lookhead to match lines.  The above grep -v is simpler :p
# /bin/grep -P '^(/event(\.gif)?/(?!<%= product_codes.join('|') %>))|/event(\.gif)?\s'

# Filter for predetermined event product codes defined here:
# http://www.mediawiki.org/wiki/Analytics/Product_Codes

<%
# Iterate over through product codes
# and generate a filter for each.
product_codes.each do |product_code|
-%>
# filter and produce into Kafka for <%= product_code %> events
pipe 1 /bin/egrep '^/event(\.gif)?/<%= product_code %>' | <%= kafka_producer("event-#{product_code}") %>

<% end -%>
